
using System;

namespace lib_tinh_toan
{
    public class CubicEquationSolver
    {
        public static double[] Solve(double a, double b, double c, double d)
        {
            if (a == 0) throw new ArgumentException("Hệ số a không được bằng 0 cho phương trình bậc 3.");

            // Chuyển phương trình bậc 3 thành dạng chuẩn
            double delta0 = b * b - 3 * a * c;
            double delta1 = 2 * b * b * b - 9 * a * b * c + 27 * a * a * d;
            double discriminant = delta1 * delta1 - 4 * delta0 * delta0 * delta0;

            // Tính toán các nghiệm
            double[] roots = new double[3];

            if (discriminant >= 0)
            {
                // Có ba nghiệm thực
                double C = Math.Cbrt((delta1 + Math.Sqrt(discriminant)) / 2);
                double theta = Math.Acos((delta1 / (2 * C)) / Math.Sqrt(delta0 * delta0 * delta0));

                for (int k = 0; k < 3; k++)
                {
                    double root = -1 / (3 * a) * (b + C * Math.Cos((theta + 2 * Math.PI * k) / 3) + delta0 / C * Math.Cos((theta - Math.PI * k) / 3));
                    roots[k] = root;
                }
            }
            else
            {
                // Chưa xử lý trường hợp không có nghiệm thực hoặc nghiệm phức
                // Xử lý trường hợp đặc biệt
                throw new NotImplementedException("Giải phương trình bậc 3 với nghiệm phức chưa được triển khai.");
            }

            return roots;
        }
    }
}

